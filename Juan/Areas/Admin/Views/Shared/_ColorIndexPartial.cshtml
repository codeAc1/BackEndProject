@model IEnumerable<Color>
@{ 
    int count = (ViewBag.PageIndex - 1) * 5;
}

<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Name</th>
            <th scope="col">Product Count</th>
            <th scope="col">Status</th>
            <th scope="col">Setting</th>
        </tr>
    </thead>
    <tbody>
        @foreach (Color color in Model)
        {
            count++;
        <tr>
            <th scope="row">@count</th>
            <td>@color.Name</td>
            <td>@color.ProductColors.Count()</td>
            <td style="color:@(color.IsDeleted ? "red":"green")">@(color.IsDeleted ? "DeActive":"Active")</td>
            <td>

                <a class="btn btn-warning" asp-action="Update" asp-route-id="@color.Id" asp-route-status="@ViewBag.Status" asp-route-page="@ViewBag.PageIndex">Update</a>
                @if (color.IsDeleted)
                {
                    <a  class="btn btn-primary restoreColor" asp-action="DeleteRestore" asp-route-id="@color.Id" asp-route-status="@ViewBag.Status" asp-route-page="@ViewBag.PageIndex">Restore</a>
                }
                else
                {
                    <a  class="btn btn-danger deleteColor" asp-action="DeleteRestore" asp-route-id="@color.Id" asp-route-status="@ViewBag.Status" asp-route-page="@ViewBag.PageIndex">Delete</a>
                }

            </td>
        </tr>
        }
    </tbody>
</table>
